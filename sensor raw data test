#!/usr/bin/env python3
import glob
import os
import math
import time

def find_iio_device():
    """
    Sucht im Verzeichnis /sys/bus/iio/devices/ nach einem Gerät,
    das einen Beschleunigungssensor zur Verfügung stellt (z. B. die Datei in_accel_x_raw existiert).
    """
    for device in glob.glob('/sys/bus/iio/devices/iio:device*'):
        if os.path.exists(os.path.join(device, 'in_accel_x_raw')):
            return device
    return None

def read_accel(device):
    """
    Liest die Rohwerte des Beschleunigungssensors (x, y, z) und den Skalierungsfaktor.
    Rechnet die Rohwerte in physikalische Einheiten um.
    """
    def read_value(filename):
        with open(os.path.join(device, filename), 'r') as f:
            return float(f.read().strip())
    
    x_raw = read_value('in_accel_x_raw')
    y_raw = read_value('in_accel_y_raw')
    z_raw = read_value('in_accel_z_raw')
    
    # Falls vorhanden, den Skalierungsfaktor verwenden, sonst scale=1.0
    scale_file = os.path.join(device, 'in_accel_scale')
    if os.path.exists(scale_file):
        scale = read_value('in_accel_scale')
    else:
        scale = 1.0

    x = x_raw * scale
    y = y_raw * scale
    z = z_raw * scale
    return x, y, z

def calculate_tilt(x, y, z):
    """
    Berechnet den Neigungswinkel in Grad.
    
    Wir interpretieren den Winkel als den Winkel zwischen dem 
    gemessenen Beschleunigungsvektor und der Sensor-z-Achse.
    
    Formel:
        angle = arccos(z / |g|)
        
    |g| ist dabei die Vektorlänge (Magnitude) des Beschleunigungsvektors.
    So erhalten wir einen Winkel zwischen 0° (wenn z = |g|, also senkrecht) und 180° (wenn z = -|g|).
    """
    mag = math.sqrt(x*x + y*y + z*z)
    if mag == 0:
        return None
    angle_rad = math.acos(z / mag)
    angle_deg = math.degrees(angle_rad)
    return angle_deg

def main():
    device = find_iio_device()
    if not device:
        print("Kein IIO-Gerät mit Beschleunigungssensor gefunden.")
        return

    print(f"Verwende IIO-Gerät: {device}")
    print("Drücke STRG+C zum Beenden.\n")
    
    while True:
        try:
            x, y, z = read_accel(device)
            tilt = calculate_tilt(x, y, z)
            if tilt is None:
                print("Fehler: Magnitude = 0")
            else:
                print(f"Neigungswinkel: {tilt:.2f}°")
            time.sleep(0.5)
        except KeyboardInterrupt:
            print("\nBeendet.")
            break

if __name__ == '__main__':
    main()